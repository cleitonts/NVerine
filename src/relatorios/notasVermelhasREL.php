<?php
/**
 * Created by PhpStorm.
 * User: Cleiton
 * Date: 07/03/2019
 * Time: 15:58
 */

namespace src\relatorios;

use src\entity\EducacionalBoletimGUI;

class notasVermelhasREL extends EducacionalBoletimGUI
{
    public function __construct($handle = null)
    {
        parent::__construct();
    }

    public function getCampo($linha, $coluna)
    {
        return parent::getCampo($linha, $coluna); // TODO: Change the autogenerated stub
    }

    public function getChart()
    {
        $arr = array();
        // recalcula a quantidade de notas vermelhas e azuis
        $temp = array();
        foreach ($this->itens as $r){

            $temp[$r->obj_avaliacao->serie][$r->cod_aluno]["abaixo"] = 0;

            if($r->nota < 10){   // consertar esse numero, no momento esta estatico
                $temp[$r->obj_avaliacao->serie][$r->cod_aluno]["abaixo"] = $temp[$r->obj_avaliacao->serie][$r->cod_aluno]["abaixo"] + 1;
            }
            $header[utf8_encode($r->obj_avaliacao->serie)] = utf8_encode($r->obj_avaliacao->serie);
        }

        // totalizadores para datasets
        $total_vermelhas = array();
        $total_amarelas = array();
        $total_azuis = array();

        // series
        foreach ($temp as $k => $v){
            $total1 = 0;
            $total2 = 0;
            $total  = 0;

            // alunos
            foreach ($v as $r){

                if($r["abaixo"] > 1)
                {
                    $total2++;
                }
                elseif($r["abaixo"] > 0)
                {
                    $total1++;
                }
                else{
                    $total++;
                }
            }

            $total_vermelhas[] = $total2;
            $total_amarelas[] = $total1;
            $total_azuis[] = $total;
        }

        // monta as datasets
        $data[] = array(
            "label" => "Apenas notas azuis",
            "data" => $total_azuis,
            "backgroundColor" => "blue"
        );

        $data[] = array(
            "label" => "Uma nota vermelha",
            "data" => $total_amarelas,
            "backgroundColor" => "orange"
        );

        $data[] = array(
            "label" => "Duas ou mais notas vermelhas",
            "data" => $total_vermelhas,
            "backgroundColor" => "red"
        );

        //transforma o indice da serie em numero
        $header = array_values($header);

        // monta a arvore final
        $arr["labels"] = $header;
        $arr["datasets"] = $data;

        return $arr;
    }

    public function fetch()
    {
        parent::fetch(); // TODO: Change the autogenerated stub
    }
}